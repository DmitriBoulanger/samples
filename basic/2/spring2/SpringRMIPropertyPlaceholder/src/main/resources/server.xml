<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<description>
		RMI-Server configured with service-properties.
		The properties are located in the product configuration directory
		The server exposes to the client service named Service
	</description>
	
	<context:component-scan base-package="de.dbo.samples.spring.properties.server" />

	<!-- Enable annotation processing -->
	<context:annotation-config /> 

	<!-- 
		Property replacement 
		System properties, if any, overwrite the values in properties-resources
	-->
	<context:property-placeholder location="classpath:worker.properties
	, file:${product.conf}/service.properties"  
		system-properties-mode="OVERRIDE" />
		
	<!-- Declaration of the RMI-server -->
	<bean class="org.springframework.remoting.rmi.RmiServiceExporter">
	
		<!-- serviceName represents RMI Service Name -->
		<property name="serviceName" value="Service" />
        
		<!-- reference to object to be exported -->
		<property name="service" ref="serviceImpl" />
		
		 <!-- serviceInterface represents RMI-Service Interface exposed -->
		<property name="serviceInterface" value="de.dbo.samples.spring.properties.server.api.Service" />

		<!-- the port of the RMI registry (defaults to '1099' if omitted) -->
		<property name="registryPort" value="1099" />

	</bean>
	
	<bean name="serviceImpl" class="de.dbo.samples.spring.properties.server.impl.ServiceImpl"/>
		<!-- <property name="worker" ref="workerImpl" /> -->
	
	
	<bean name="workerImpl" class="de.dbo.samples.spring.properties.server.impl.ServiceWorker" />
	
	<bean name="serviceConfig" class="de.dbo.samples.spring.properties.server.api.ServiceConfig" />

</beans>